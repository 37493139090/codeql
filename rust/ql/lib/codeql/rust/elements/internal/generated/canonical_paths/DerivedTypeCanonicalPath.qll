// generated by codegen, do not edit
/**
 * This module provides the generated definition of `DerivedTypeCanonicalPath`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.canonical_paths.TypeCanonicalPath
import codeql.rust.elements.canonical_paths.internal.TypeCanonicalPathImpl::Impl as TypeCanonicalPathImpl

/**
 * INTERNAL: This module contains the fully generated definition of `DerivedTypeCanonicalPath` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * A derived canonical type, like `[i32; 4]`, `&mut std::string::String` or `(i32, std::string::String)`.
   * INTERNAL: Do not reference the `Generated::DerivedTypeCanonicalPath` class directly.
   * Use the subclass `DerivedTypeCanonicalPath`, where the following predicates are available.
   */
  class DerivedTypeCanonicalPath extends Synth::TDerivedTypeCanonicalPath,
    TypeCanonicalPathImpl::TypeCanonicalPath
  {
    override string getAPrimaryQlClass() { result = "DerivedTypeCanonicalPath" }

    /**
     * Gets the `index`th modifier of this derived type canonical path (0-based).
     */
    string getModifier(int index) {
      result =
        Synth::convertDerivedTypeCanonicalPathToRaw(this)
            .(Raw::DerivedTypeCanonicalPath)
            .getModifier(index)
    }

    /**
     * Gets any of the modifiers of this derived type canonical path.
     */
    final string getAModifier() { result = this.getModifier(_) }

    /**
     * Gets the number of modifiers of this derived type canonical path.
     */
    final int getNumberOfModifiers() { result = count(int i | exists(this.getModifier(i))) }

    /**
     * Gets the `index`th base of this derived type canonical path (0-based).
     */
    TypeCanonicalPath getBase(int index) {
      result =
        Synth::convertTypeCanonicalPathFromRaw(Synth::convertDerivedTypeCanonicalPathToRaw(this)
              .(Raw::DerivedTypeCanonicalPath)
              .getBase(index))
    }

    /**
     * Gets any of the bases of this derived type canonical path.
     */
    final TypeCanonicalPath getABase() { result = this.getBase(_) }

    /**
     * Gets the number of bases of this derived type canonical path.
     */
    final int getNumberOfBases() { result = count(int i | exists(this.getBase(i))) }
  }
}
