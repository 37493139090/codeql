// generated by codegen, do not edit
/**
 * This module provides the generated definition of `Namespace`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.canonical_paths.internal.CanonicalPathImpl::Impl as CanonicalPathImpl
import codeql.rust.elements.canonical_paths.CrateRoot

/**
 * INTERNAL: This module contains the fully generated definition of `Namespace` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * A namespace, comprised of a crate root and a possibly empty `::` separated module path.
   * INTERNAL: Do not reference the `Generated::Namespace` class directly.
   * Use the subclass `Namespace`, where the following predicates are available.
   */
  class Namespace extends Synth::TNamespace, CanonicalPathImpl::CanonicalPath {
    override string getAPrimaryQlClass() { result = "Namespace" }

    /**
     * Gets the root of this namespace.
     */
    CrateRoot getRoot() {
      result =
        Synth::convertCrateRootFromRaw(Synth::convertNamespaceToRaw(this).(Raw::Namespace).getRoot())
    }

    /**
     * Gets the path of this namespace.
     */
    string getPath() { result = Synth::convertNamespaceToRaw(this).(Raw::Namespace).getPath() }
  }
}
