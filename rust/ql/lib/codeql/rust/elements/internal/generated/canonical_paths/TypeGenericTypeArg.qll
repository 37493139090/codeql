// generated by codegen, do not edit
/**
 * This module provides the generated definition of `TypeGenericTypeArg`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.canonical_paths.TypeCanonicalPath
import codeql.rust.elements.canonical_paths.internal.TypeGenericArgImpl::Impl as TypeGenericArgImpl

/**
 * INTERNAL: This module contains the fully generated definition of `TypeGenericTypeArg` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * A generic argument for a type that is a type.
   * INTERNAL: Do not reference the `Generated::TypeGenericTypeArg` class directly.
   * Use the subclass `TypeGenericTypeArg`, where the following predicates are available.
   */
  class TypeGenericTypeArg extends Synth::TTypeGenericTypeArg, TypeGenericArgImpl::TypeGenericArg {
    override string getAPrimaryQlClass() { result = "TypeGenericTypeArg" }

    /**
     * Gets the path of this type generic type argument.
     */
    TypeCanonicalPath getPath() {
      result =
        Synth::convertTypeCanonicalPathFromRaw(Synth::convertTypeGenericTypeArgToRaw(this)
              .(Raw::TypeGenericTypeArg)
              .getPath())
    }
  }
}
